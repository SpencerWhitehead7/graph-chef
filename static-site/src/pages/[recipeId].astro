---
import Card from "@/components/Card.astro"
import GraphView from "@/components/GraphView"
import ListView from "@/components/ListView"
import RecipeDetails from "@/components/RecipeDetails"
import Layout from "@/layouts/Layout.astro"

import { RecipeSerialized, serializedToFlowed, serializedToListed } from "../../../shared"

export const getStaticPaths = async () => {
  const recipes = await Astro.glob<{ default: RecipeSerialized }>("../recipeData/*.ts")

  return recipes.map(({ default: recipe }) => ({
    params: {
      recipeId: String(recipe.id),
    },
    props: {
      recipe: recipe,
    },
  }))
}

const { recipe } = Astro.props
const { title, desc, size, tags } = recipe
---

<Layout title={`Graph Chef - ${title}`}>
  <main>
    <RecipeDetails {title} {desc} {size} {tags} />
    <div class="grid-container">
      <Card>
        <!-- TODO:: Some weird, evil interaction between astro, node, ts, and reactflow causes an error when I try to build and bake it out into a static comp -->
        <!-- Come back later and see if they've sorted themselves out and whether the hydration can be removed -->
        <GraphView recipe={serializedToFlowed(recipe)} client:only="preact" />
      </Card>
      <Card>
        <ListView recipe={serializedToListed(recipe)} />
      </Card>
    </div>
  </main>
</Layout>

<style>
  .grid-container {
    flex-grow: 1;
    display: grid;
    grid-template-rows: 2fr 1fr;
    grid-template-columns: 1fr;
    row-gap: var(--m);
    column-gap: var(--m);
  }

  @media (min-width: 1472px) {
    .grid-container {
      grid-template-rows: 1fr;
      grid-template-columns: 2fr 1fr;
    }
  }
</style>
